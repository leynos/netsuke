project_name: netsuke

# Ensure man pages exist before packaging. GoReleaser only archives files and
# fails later if they're missing, so fail fast with a helpful message instead.
before:
  hooks:
    - |
        test -s dist/netsuke.1.gz || {
          echo "::error title=Manpage missing::dist/netsuke.1.gz not found. Ensure package job staged it before packaging.";
          exit 1;
        }

builds:
  # GoReleaser packages prebuilt Rust binaries. `skip_build: true` avoids
  # rebuilding and the `goos`/`goarch` matrix must mirror the CI build job
  # targets (linux/amd64, linux/arm64, darwin/amd64, darwin/arm64,
  # freebsd/amd64). Keep this list in sync with `.github/workflows/release.yml`.
  - id: netsuke
    binary: netsuke
    skip_build: true
    # The OS/arch list must mirror jobs.build and jobs.build-macos in
    # .github/workflows/release.yml. Update PACKAGE_PLATFORMS there when
    # adding a new target and keep this list in sync.
    goos:
      - linux
      - darwin
      - freebsd
    goarch:
      - amd64
      - arm64
    # freebsd/arm64 is a Rust tier 3 target and lacks prebuilt standard
    # libraries. Ignore it until support improves.
    # See: https://users.rust-lang.org/t/why-target-aarch64-unknown-freebsd-cannot-be-installed-on-the-debian-gnu-linux-platform/126339
    ignore:
      - goos: freebsd
        goarch: arm64


archives:
  - id: default
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format: tar.gz
    files:
      - LICENSE
      - README.md
      - dist/netsuke.1.gz

nfpms:
  # Linux packages (deb/rpm) for netsuke
  - id: netsuke-packages
    package_name: netsuke
    vendor: "Netsuke"
    homepage: "https://github.com/leynos/netsuke"
    maintainer: "Payton McIntosh <pmcintosh@df12.net>"
    description: "Friendly build system that compiles structured manifests into a Ninja build graph"
    license: ISC
    formats: [deb, rpm]
    builds: [netsuke]
    bindir: /usr/bin
    contents:
      - src: ./dist/netsuke.1.gz
        dst: /usr/share/man/man1/netsuke.1.gz


# FreeBSD native .pkg via a post hook that runs only on FreeBSD.
# The GitHub Actions `package` job runs on Ubuntu, so CI produces only the
# tar.gz artefact unless a FreeBSD runner executes this configuration.
# This hook is a no-op on Linux and macOS CI runners.
# When run on FreeBSD it stages files and calls `pkg create`, yielding
#   dist/netsuke-<version>.pkg
# Requires `pkg` installed on the FreeBSD runner. The ABI string is derived at
# runtime to be accurate.
hooks:
  post:
    - |
      if [ "$(uname -s)" = "FreeBSD" ]; then
        set -euo pipefail
        VERSION="{{ .Version }}"
        ABI="$(pkg config ABI)"  # e.g., FreeBSD:14:amd64

        for BIN in netsuke; do
          STAGE="$(mktemp -d -t "netsuke-${BIN}-stage.XXXXXXXX")"
          MANPAGE="dist/${BIN}.1.gz"
          # Scope cleanup to each BIN
          trap 'rc=$?; rm -rf "$STAGE" manifest.ucl 2>/dev/null || true; exit $rc' EXIT
          install -d "$STAGE/usr/local/bin" "$STAGE/usr/local/share/man/man1"

          # Prefer the built artefact from dist; if not found, fall back to target/release
          # GoReleaserâ€™s Rust plugin names artefacts predictably:
          #   dist/{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}/{{BIN}}
          # but picking from target/release is usually simpler on same-OS runners.
          if [ -x "target/release/${BIN}" ]; then
            install -s -m 0755 "target/release/${BIN}" "$STAGE/usr/local/bin/${BIN}"
          else
            echo "WARN: target/release/${BIN} not found; ensure the FreeBSD build ran."
            continue
          fi

          if [ -s "${MANPAGE}" ]; then
            install -m 0644 "${MANPAGE}" "$STAGE/usr/local/share/man/man1/${BIN}.1.gz"
          fi

          cat > manifest.ucl <<UCL
name: "${BIN}"
version: "${VERSION}"
origin: "local/${BIN}"
comment: "Netsuke build system"
www: "https://github.com/leynos/netsuke"
maintainer: "Payton McIntosh <pmcintosh@df12.net>"
arch: "${ABI}"
desc: "Friendly build system that compiles structured manifests into a Ninja build graph."
licenses: ["ISC"]
UCL

          mkdir -p dist
          pkg create -r "$STAGE" -M manifest.ucl -o dist
          rm -rf "$STAGE" manifest.ucl
          trap - EXIT
        done
      fi

release:
  github:
    owner: leynos
    name: netsuke
  draft: true

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^style:'
      - 'Merge pull request'
      - 'Merge branch'
