project_name: netsuke

plugins:
  - import: github.com/goreleaser/goreleaser-rust@v1.6.0

# Optional: ensure manpages are generated before packaging (if not done by build.rs)
before:
  hooks:
    - echo "Expecting man pages at target/generated-man/*.1 (generated by build.rs)"

builds:
  - id: netsuke
    binary: netsuke
    main: ./crates/netsuke
    builder: rust
    # Add macOS + FreeBSD targets in addition to Linux
    targets:
      - x86_64-unknown-linux-gnu
      - aarch64-unknown-linux-gnu
      - x86_64-apple-darwin
      - aarch64-apple-darwin
      - x86_64-unknown-freebsd

  - id: YAML-powered Jinja/Ninja hybrid build system
    binary: YAML-powered Jinja/Ninja hybrid build system
    main: ./crates/YAML-powered Jinja/Ninja hybrid build system
    builder: rust
    targets:
      - x86_64-unknown-linux-gnu
      - aarch64-unknown-linux-gnu
      - x86_64-apple-darwin
      - aarch64-apple-darwin
      - x86_64-unknown-freebsd

archives:
  - id: default
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format: tar.gz
    files:
      - LICENSE
      - README.md
      - target/generated-man/netsuke.1

nfpms:
  # Linux packages (deb/rpm) for netsuke
  - id: netsuke-packages
    package_name: netsuke
    vendor: "Netsuke"
    homepage: "https://github.com/leynos/netsuke"
    maintainer: "Payton McIntosh <pmcintosh@df12.net>"
    description: "YAML-powered Jinja/Ninja hybrid build system"
    license: MIT
    formats: [deb, rpm]
    builds: [netsuke]
    bindir: /usr/local/bin
    contents:
      - src: ./target/generated-man/netsuke.1
        dst: /usr/local/share/man/man1/netsuke.1

  # macOS .pkg for netsuke (nfpm supports pkg on macOS)
  - id: netsuke-darwin
    package_name: netsuke
    vendor: "Netsuke"
    homepage: "https://github.com/leynos/netsuke"
    maintainer: "Payton McIntosh <pmcintosh@df12.net>"
    description: "YAML-powered Jinja/Ninja hybrid build system"
    license: MIT
    builds: [netsuke]
    bindir: /usr/local/bin
    formats: [pkg]
    # Optionally set an identifier for pkg receipts
    # See nfpm docs; this is often reverse-DNS
    # (uncomment if you want a specific ID)
    # rpm:
    #   signature:
    #     key_file: ""   # not used for pkg
    overrides:
      darwin:
        formats: [pkg]
    contents:
      - src: ./target/generated-man/netsuke.1
        dst: /usr/local/share/man/man1/netsuke.1

# FreeBSD native .pkg via a post hook that runs only on FreeBSD.
# It stages files and calls `pkg create`. Results land in `dist/`.
# You’ll get:
#   dist/netsuke-<version>.pkg
# Note: requires `pkg` installed on the FreeBSD runner.
# The ABI string is derived at runtime to be accurate.
hooks:
  post:
    - |
      if [ "$(uname -s)" = "FreeBSD" ]; then
        set -euo pipefail
        VERSION="{{ .Version }}"
        ABI="$(pkg config ABI)"  # e.g., FreeBSD:14:amd64

        for BIN in netsuke YAML-powered Jinja/Ninja hybrid build system; do
          STAGE="stage-${BIN}"
          MANPAGE="target/generated-man/${BIN}.1"
          rm -rf "$STAGE"
          install -d "$STAGE/usr/local/bin" "$STAGE/usr/local/share/man/man1"

          # Prefer the built artefact from dist; if not found, fall back to target/release
          # GoReleaser’s Rust plugin names artefacts predictably:
          #   dist/{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}/{{BIN}}
          # but picking from target/release is usually simpler on same-OS runners.
          if [ -x "target/release/${BIN}" ]; then
            install -s -m 0755 "target/release/${BIN}" "$STAGE/usr/local/bin/${BIN}"
          else
            echo "WARN: target/release/${BIN} not found; ensure the FreeBSD build ran."
            continue
          fi

          if [ -f "${MANPAGE}" ]; then
            install -m 0644 "${MANPAGE}" "$STAGE/usr/local/share/man/man1/${BIN}.1"
          fi

          cat > manifest.ucl <<UCL
name: "${BIN}"
version: "${VERSION}"
origin: "local/${BIN}"
comment: "Netsuke ${BIN} component"
www: "https://github.com/leynos/netsuke"
maintainer: "Payton McIntosh <pmcintosh@df12.net>"
arch: "${ABI}"
desc: "Part of the Netsuke notification system."
licenses: [ "MIT" ]
UCL

          mkdir -p dist
          pkg create -r "$STAGE" -m . -o dist
          rm -rf "$STAGE" manifest.ucl
        done
      fi

release:
  github:
    owner: leynos
    name: netsuke
  draft: true

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^style:'
      - 'Merge pull request'
      - 'Merge branch'
