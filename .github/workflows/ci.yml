name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable, '1.89.0']
    permissions:
      contents: read
    env:
      CARGO_TERM_COLOR: always
      BUILD_PROFILE: debug
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633  # v4.1.2
      - name: Setup Rust
        uses: leynos/shared-actions/.github/actions/setup-rust@d17b90de97b49bc9309b4335774f1df3fd495c4b
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      - name: Show rustc version
        run: |
          rustup show
          rustc --version
          cargo --version
      - name: Show Ninja version
        run: ninja --version
      - name: Format
        run: make check-fmt
      - name: Lint
        run: make lint
      - name: Test
        run: make test
      - name: Test and Measure Coverage
        if: matrix.rust == 'stable'
        uses: leynos/shared-actions/.github/actions/generate-coverage@d17b90de97b49bc9309b4335774f1df3fd495c4b
        with:
          output-path: lcov.info
          format: lcov
      - name: Upload coverage data to CodeScene
        env:
          CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
        if: matrix.rust == 'stable' && env.CS_ACCESS_TOKEN != ''
        uses: leynos/shared-actions/.github/actions/upload-codescene-coverage@d17b90de97b49bc9309b4335774f1df3fd495c4b
        with:
          format: lcov
          access-token: ${{ env.CS_ACCESS_TOKEN }}
          installer-checksum: ${{ vars.CODESCENE_CLI_SHA256 }}
