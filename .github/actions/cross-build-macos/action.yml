name: 'Build macOS target'
description: 'Cross-compile a Rust project for macOS using osxcross'
inputs:
  target:
    description: 'Rust target triple'
    required: true
    default: 'x86_64-apple-darwin'
  osx-version:
    description: 'macOS SDK version'
    required: false
    default: '12.3'
  deployment-target:
    description: 'MACOSX_DEPLOYMENT_TARGET (e.g. 11.0 for Apple Silicon)'
    required: false
    default: '11.0'
runs:
  using: 'composite'
  steps:
    - name: Setup osxcross
      id: osxcross
      uses: mbround18/setup-osxcross@b26146d499c54979ed3d023266865dc188881911  # v2
      with:
        osx-version: ${{ inputs.osx-version }}
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ inputs.target }}
    - name: Configure environment
      shell: bash
      run: |
        set -euo pipefail
        target="${{ inputs.target }}"
        target_env=$(echo "$target" | tr '-' '_' | tr '[:lower:]' '[:upper:]')
        case "$target" in
          x86_64-apple-darwin)
            linker="o64-clang"
            ;;
          aarch64-apple-darwin)
            linker="oa64-clang"
            ;;
          *)
            echo "::warning::Unknown target $target; no linker configured" >&2
            linker=""
            ;;
        esac
        if [ -n "$linker" ]; then
          echo "CARGO_TARGET_${target_env}_LINKER=$linker" >> "$GITHUB_ENV"
        fi
        echo "SDKROOT=${{ steps.osxcross.outputs.sdk-path }}" >> "$GITHUB_ENV"
        echo "MACOSX_DEPLOYMENT_TARGET=${{ inputs.deployment-target }}" >> "$GITHUB_ENV"
    - name: Build for macOS
      run: cargo build --release --target ${{ inputs.target }}
      shell: bash
